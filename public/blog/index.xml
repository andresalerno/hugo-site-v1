<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on </title>
    <link>/blog/</link>
    <description>Recent content in Blogs on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>UTF-8</language>
    <lastBuildDate>Sun, 14 Apr 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>R Fundamentals</title>
      <link>/blog/2019/04/14/2019-04-14-r-fundamentals/</link>
      <pubDate>Sun, 14 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/2019/04/14/2019-04-14-r-fundamentals/</guid>
      <description>Asignz &amp;lt;- x + yz## [1] 7Basic operationsn + 5## [1] 15Code Flowif (x &amp;lt; y){print(&amp;quot;x is lesser than y&amp;quot;)} else if (x == y){print(&amp;quot;x is equal to y&amp;quot;)} else {print(&amp;quot;x is greater than y&amp;quot;)}## [1] &amp;quot;x is greater than y&amp;quot;for (i in 1:10) {print(i)}## [1] 1## [1] 2## [1] 3## [1] 4## [1] 5## [1] 6## [1] 7## [1] 8## [1] 9## [1] 10t &amp;lt;- matrix(1:6, nrow = 2, ncol = 3)t## [,1] [,2] [,3]## [1,] 1 3 5## [2,] 2 4 6for (i in seq(nrow(t))) {for(j in seq(ncol(t))){print(t[i,j])}}## [1] 1## [1] 3## [1] 5## [1] 2## [1] 4## [1] 6Data Frameso &amp;lt;- c(1, 3, 5)p &amp;lt;- c(&amp;quot;red&amp;quot;, &amp;quot;yellow&amp;quot;, &amp;quot;blue&amp;quot;)q &amp;lt;- c(TRUE, FALSE, TRUE)df &amp;lt;- data.</description>
    </item>
    
    <item>
      <title>Migrate from Jekyll</title>
      <link>/blog/2015/10/10/migrate-from-jekyll/</link>
      <pubDate>Sat, 10 Oct 2015 13:07:31 +0200</pubDate>
      
      <guid>/blog/2015/10/10/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>Linked post</title>
      <link>/blog/2015/10/02/linked-post/</link>
      <pubDate>Fri, 02 Oct 2015 21:49:20 +0200</pubDate>
      
      <guid>/blog/2015/10/02/linked-post/</guid>
      <description>I&amp;rsquo;m a linked post in the menu. You can add other posts by adding the following line to the frontmatter:
menu = &amp;quot;main&amp;quot;  Lorem ipsum dolor sit amet, consectetur adipiscing elit. In mauris nulla, vestibulum vel auctor sed, posuere eu lorem. Aliquam consequat augue ut accumsan mollis. Suspendisse malesuada sodales tincidunt. Vivamus sed erat ac augue bibendum porta sed id ipsum. Ut mollis mauris eget ligula sagittis cursus. Aliquam id pharetra tellus.</description>
    </item>
    
    <item>
      <title>Go is for lovers</title>
      <link>/blog/2015/09/17/go-is-for-lovers/</link>
      <pubDate>Thu, 17 Sep 2015 13:47:08 +0200</pubDate>
      
      <guid>/blog/2015/09/17/go-is-for-lovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Hugo is for lovers</title>
      <link>/blog/2015/08/03/hugo-is-for-lovers/</link>
      <pubDate>Mon, 03 Aug 2015 13:39:46 +0200</pubDate>
      
      <guid>/blog/2015/08/03/hugo-is-for-lovers/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>/blog/2015/07/23/2015-07-23-r-rmarkdown/</link>
      <pubDate>Thu, 23 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>/blog/2015/07/23/2015-07-23-r-rmarkdown/</guid>
      <description>teste</description>
    </item>
    
    <item>
      <title>Creating a new theme</title>
      <link>/blog/2015/06/24/creating-a-new-theme/</link>
      <pubDate>Wed, 24 Jun 2015 13:50:46 +0200</pubDate>
      
      <guid>/blog/2015/06/24/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Multiple Logistic Regression</title>
      <link>/blog/1/01/01/multiple_logistic_regression/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blog/1/01/01/multiple_logistic_regression/</guid>
      <description>teste</description>
    </item>
    
  </channel>
</rss>